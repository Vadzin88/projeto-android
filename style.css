@charset "UTF-8";

@font-face {
    font-family: "jr";
    src: url("Arquivos/fontes/idroid.otf");
}

* {
    margin: 0px;
    padding: 0px;
}

:root { /*guia para criar variáveis */
    --cor0: #c5ebd6;
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --font-padrao: Arial, Verdana, sans-serif;
    --font-desque: jr;
}

body {
    background-color: var(--cor0);
}

div#video > iframe {
    position: absolute;
    top: 5%;
    left: 5%;
    height: 90%;
    width: 90%;
}

/*relative - (relativo):

O valor relative posiciona um elemento em relação à sua posição "normal"... Ou seja, as quatro propriedades auxiliares (top, bottom, left e right) vão fazer com que o elemento seja ajustado A PARTIR DA SUA POSIÇÃO ORIGINAL.

Após ter definido o tipo de position (relative nesse caso), a posição do elemento é definida através das quatro propriedades auxiliares do position: top, bottom, left e right. Que indicam a distância com relação ao topo, base, esquerda e direita, respectivamente, tomando como REFERÊNCIA DE POSICIONAMENTO (no caso do valor relative) a posição original do elemento. (se não configurarmos valores de posicionamento com as propriedades auxiliares, o elemento simplesmente fica no mesmo lugar)

absolute - (absoluto):

Um elemento com o valor absolute para position vai ser disposto, com as propriedades auxiliares, de forma relativa ao seu elemento pai... DESDE QUE ESSE ELEMENTO PAI TENHA UM POSITION COM UM VALOR DIFERENTE DE "STATIC" DEFINIDO!
 
Se o elemento pai não ter um position com um valor diferente de "static" definido, o valor absolute faz com que o elemento configurado " saia " da hierarquia estabelecida pelo HTML. */
div#video {
    background-color: gray;
    margin-bottom: 15px;
    margin: 0px -10px 15px -10px;
    position: relative;
    padding-bottom: 38%;
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 125px;
    text-align: center;
    padding-top: 25px;

}

header h1 {
    font-family: "jr";
    color: white;
}

header > p {
    font-size: 1.2em;
    font-family: Arial, Helvetica, sans-serif;
    text-align: center;
    color: white;
}

p {
    text-align: justify;
    text-indent: 1cm;
    margin: 10px 10px;
}

nav {
    padding: 0px 0px 5px 5px;
    background-color: var(--cor5);
}

nav > a {
    font-family: var(--font-padrao);
    text-decoration: none;
    margin-right: 10px;
    color: white;
    transition-duration: 0.5s;
}

nav > a:hover {
    text-decoration: underline;
    background-color: var(--cor1);
}

main {
    background-color: white;
    min-width: 200px;
    max-width: 850px;
    margin: auto;
    border-radius: 15px;
    padding: 10px;
}

main p {
    font-family: var(--font-padrao);
}

article h2 {
    color: var(--cor4);
    font-family: var(--font-desque);
    background-image: linear-gradient(to right, var(--cor1), transparent);
    margin: 10px 0px;
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
}

aside ul {
    list-style-position: inside;
    columns: 2;
}

aside h2 {
    background-color: var(--cor4);
    border-radius: 10px 10px 0px 0px;
    margin: -10px -10px -10px -10px;
    padding: 5px;
    font-family: var(--font-padrao);
    color: white;
}

footer {
    background-color: var(--cor4);
    text-align: center;
    padding: 5px;
    color: black;
}

#bg {
    width: 75%;
}